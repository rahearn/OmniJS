/*{
    "author": "Ryan Ahearn",
    "targets": ["omnifocus"],
    "type": "action",
    "identifier": "net.rcahearn.complete_and_defer",
    "version": "0.1",
    "description": "Mark the selected action as complete and defer the next action for X days",
    "label": "Complete and Defer",
    "mediumLabel": "Complete and Defer",
    "paletteLabel": "Complete and Defer",
}*/
(() => {
    var action = new PlugIn.Action(function(selection) {
        let task = selection.tasks[0]
        console.log("Waiting after: ", task.name)

        let nextWeek = Calendar.current.startOfDay(new Date())
        nextWeek.setDate(nextWeek.getDate() + 7)
        
        const dateInputField = new Form.Field.Date(
        	"dateInput",
        	"Defer until:",
        	nextWeek
        )
        const taskNameField = new Form.Field.String(
        	"taskName",
        	"Task name:",
        	"Ready to proceed"
        )

		const inputForm = new Form()
		inputForm.addField(taskNameField)
		inputForm.addField(dateInputField)
		const formPrompt = "Create Waiting Task"
		const buttonTitle = "Continue"
		const formPromise = inputForm.show(formPrompt, buttonTitle)

		inputForm.validate = function(formObject) {
			const dateInput = formObject.values["dateInput"]
			const taskName = formObject.values["taskName"]
			return dateInput != null && taskName !== ""
		}

		formPromise.then(function(formObject) {
	        let waitTask = new Task(formObject.values["taskName"], task.after)
	        waitTask.addTag(Tag.forecastTag)
	        waitTask.deferDate = formObject.values["dateInput"]
        
	        task.markComplete()
		})

		formPromise.catch(function(error) {
			console.log("form cancelled", error.message)
		})
    });

    action.validate = function(selection){
      const lengthValid = selection.tasks.length === 1
      if (!lengthValid) { return false }
      const task = selection.tasks[0]
      const statusValid = !task.completed
      return statusValid
    };
        
    return action;
})();
